{
  "youdaili"://name of a proxy setting.
  {
  	
    "base_url":
    {
      "base_url":
      {
      	
      		"base_url": ["http://www.youdaili.net/Daili/"],
      		"selector": ["ul.newslist_ulstyle >li.newslist_listyle > a"],
      		"sequence": [0,1,2,3,5],
      		"pattern": ["href=\"([^\\s]+)\""],
      		"container_attr":["href"]
      },
      "selector": ["ul.newslist_line > li > a"],
      "sequence": [0],
      "pattern": ["href=\"(.*html)\""],
      "container_attr":["href"]
    },
    //css selector expression.
    //it should contain proxy ips.
    //http://thehtmldom.sourceforge.net/#searching
    "selector":["div.newsdetail_cont > div.cont_font > p"],  

    //regular expression. 
    //do include ip and port pattern group.
    "pattern":["([\\d]+\\.[\\d]+\\.[\\d]+\\.[\\d]+):([\\d]+)"]//maps to base_url.ip must comes first.	
    
  },
  "haodailiip":
	{
		"base_url":
		{
			"base_url":
			{
				"base_url":["http://www.haodailiip.com/"],
				"selector": ["div.foot > div.column > a"],
				"sequence": [0,1],
				"pattern": ["href=\"([^\\s]+)\""],
				"container_attr":["href"]
			},
			"selector": ["table.proxy_table + p > a"],
			"sequence": [1,2,3],
			"pattern": ["href=\"([^\\s]+)\""],
			"container_attr":["href"]
			
		},
		"selector":["table.proxy_table > tr"],
		"pattern":["([\\d]+\\.[\\d]+\\.[\\d]+\\.[\\d]+)[^\\d]+([\\d]+)"]
	},
  
  
  "xici":
  {
  	"base_url":
  	{
		"base_url":["http://www.xici.net.co"],
		"selector": ["ul#nav > li > a"],
		"sequence": [1,2,3,4,5],
		"pattern": ["href=\"([^\\s]+)\""],
		"container_attr":["href"]
  	},
  	"selector":["table#ip_list > tr"],
  	"pattern":["([\\d]+\\.[\\d]+\\.[\\d]+\\.[\\d]+)[^\\d]+([\\d]+)"]
  },
  "google-proxy":
  {
  	"base_url":["http://www.google-proxy.net/"],
  	"selector":["table#proxylisttable > tbody > tr"],
  	"pattern":["([\\d]+\\.[\\d]+\\.[\\d]+\\.[\\d]+)[^\\d]+([\\d]+)"]
  }
}